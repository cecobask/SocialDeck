scalar DateTime
scalar URL
scalar EmailAddress

type Post {
    _id: ID!
    creatorID: String!
    createdTime: DateTime!
    message: String
    updatedTime: DateTime
    links: [URL!]
    shares: [String!]
}

type User {
    _id: ID!
    email: EmailAddress!
    password: String!
    firstName: String!
    lastName: String!
    posts: [Post!]!
}

type Query {
    users: [User!]!
    findUserById(_id: String!): User!
    me: User!
    posts: [Post!]!
    findPostById(_id: String!): Post!
}

input LinkInput {
    url: URL!
}

type Mutation {
    signUp(email: EmailAddress!, password: String!, firstName: String!, lastName: String!): String!
    logIn(email: EmailAddress!, password: String!): String!
    logOut: String!
    deleteUserById(_id: String!): User!
    deleteAllUsers: String!
    createPost(message: String, links: [LinkInput!]): Post!
    sharePost(postID: String!): Post!
    updatePost(postID: String!, message: String!, links: [LinkInput!]): Post!
    deletePostById(_id: String!): Post!
    deleteAllPosts: String!
}